local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "RTX Shader " .. Fluent.Version,
    SubTitle = "By M1NEGERO",
    TabWidth = 160,
    Size = UDim2.fromOffset(400, 300),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    RTX = Window:AddTab({ Title = "RTX", Icon = "weather" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

local DefaultSettings = {
    Brightness = game:GetService("Lighting").Brightness,
    GlobalShadows = game:GetService("Lighting").GlobalShadows,
    OutdoorAmbient = game:GetService("Lighting").OutdoorAmbient,
    TimeOfDay = game:GetService("Lighting").TimeOfDay,
    FogEnd = game:GetService("Lighting").FogEnd,
    FogColor = game:GetService("Lighting").FogColor,
    WaterColor = workspace.Terrain.WaterColor,
    WaterReflectance = workspace.Terrain.WaterReflectance,
    WaterTransparency = workspace.Terrain.WaterTransparency,
    WaterWaveSize = workspace.Terrain.WaterWaveSize,
    WaterWaveSpeed = workspace.Terrain.WaterWaveSpeed
}

local function applyReflectanceToParts()
    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Reflectance = 0.4
            part.Material = Enum.Material.SmoothPlastic
        end
    end
end

local function applyReflectanceToCharacters()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Character then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Reflectance = 0.4
                    part.Material = Enum.Material.SmoothPlastic
                end
            end
        end
    end
end

local function activateFirstToggle()
    local lighting = game:GetService("Lighting")
    lighting.Brightness = 2
    lighting.GlobalShadows = true
    lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
    lighting.TimeOfDay = "14:00:00"
    lighting.FogEnd = 1000
    lighting.FogColor = Color3.fromRGB(200, 200, 200)

    applyReflectanceToParts()
    applyReflectanceToCharacters()

    local bloomEffect = Instance.new("BloomEffect")
    bloomEffect.Intensity = 1
    bloomEffect.Size = 24
    bloomEffect.Threshold = 2
    bloomEffect.Parent = lighting

    local colorCorrection = Instance.new("ColorCorrectionEffect")
    colorCorrection.Brightness = 0.05
    colorCorrection.Contrast = 0.1
    colorCorrection.Saturation = 0.2
    colorCorrection.TintColor = Color3.fromRGB(255, 255, 255)
    colorCorrection.Parent = lighting

    local depthOfField = Instance.new("DepthOfFieldEffect")
    depthOfField.InFocusRadius = 50
    depthOfField.NearIntensity = 0.1
    depthOfField.FarIntensity = 0.1
    depthOfField.Parent = lighting

    -- Loop to continuously apply reflectance
    task.spawn(function()
        while Options.Toggle1.Value do
            applyReflectanceToParts()
            applyReflectanceToCharacters()
            task.wait(5) -- Adjust the time interval as needed
        end
    end)
end

local function revertSettings()
    local lighting = game:GetService("Lighting")
    lighting.Brightness = DefaultSettings.Brightness
    lighting.GlobalShadows = DefaultSettings.GlobalShadows
    lighting.OutdoorAmbient = DefaultSettings.OutdoorAmbient
    lighting.TimeOfDay = DefaultSettings.TimeOfDay
    lighting.FogEnd = DefaultSettings.FogEnd
    lighting.FogColor = DefaultSettings.FogColor

    for _, effect in pairs(lighting:GetChildren()) do
        if effect:IsA("BloomEffect") or effect:IsA("ColorCorrectionEffect") or effect:IsA("DepthOfFieldEffect") then
            effect:Destroy()
        end
    end

    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Reflectance = 0
            part.Material = Enum.Material.Plastic
        end
    end

    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Character then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Reflectance = 0
                    part.Material = Enum.Material.Plastic
                end
            end
        end
    end
end

local WaterToggleActive = false

local function activateSecondToggle()
    local terrain = workspace.Terrain
    local waterColor = Color3.fromRGB(12, 84, 92)
    local waterReflectance = 0.5
    local waterTransparency = 0.5
    local waterWaveSize = 0.5
    local waterWaveSpeed = 50

    WaterToggleActive = true

    task.spawn(function()
        while WaterToggleActive do
            terrain.WaterColor = waterColor
            terrain.WaterReflectance = waterReflectance
            terrain.WaterTransparency = waterTransparency
            terrain.WaterWaveSize = waterWaveSize
            terrain.WaterWaveSpeed = waterWaveSpeed
            task.wait(1)
        end
    end)
end

local function revertWaterSettings()
    local terrain = workspace.Terrain
    terrain.WaterColor = DefaultSettings.WaterColor
    terrain.WaterReflectance = DefaultSettings.WaterReflectance
    terrain.WaterTransparency = DefaultSettings.WaterTransparency
    terrain.WaterWaveSize = DefaultSettings.WaterWaveSize
    terrain.WaterWaveSpeed = DefaultSettings.WaterWaveSpeed
    WaterToggleActive = false
end

local function createButton()
    local screenGui = Instance.new("ScreenGui")
    screenGui.ResetOnSpawn = true
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 100, 0, 50)
    button.Position = UDim2.new(0, 20, 0, 20)
    button.Text = "Toggle Window"
    button.BackgroundColor3 = Color3.fromRGB(45, 45, 48)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSansBold
    button.TextSize = 18
    button.BorderSizePixel = 0
    button.AutoButtonColor = false
    button.Parent = screenGui

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 12)
    UICorner.Parent = button

    button.MouseButton1Click:Connect(function()
        Window:Minimize()
    end)
end

game.Players.LocalPlayer.CharacterAdded:Connect(function()
    createButton()
end)

createButton()

do
    Fluent:Notify({
        Title = "RTX Shader",
        Content = "By M1NEGERO",
        Duration = 5
    })

    Tabs.RTX:AddButton({
        Title = "P|Shader",
        Description = "This is a single button",
        Callback = function()
            getgenv().RTX_Name = "rtxnamehere"
            loadstring(game:HttpGet('https://raw.githubusercontent.com/randomstring0/pshade-ultimate/refs/heads/main/src/cd.lua'))()
        end
    })

    local Toggle1 = Tabs.RTX:AddToggle("Toggle1", {Title = "Global Realistic", Default = false })
    Toggle1:OnChanged(function()
        if Options.Toggle1.Value then
            activateFirstToggle()
        else
            revertSettings()
        end
    end)
    Options.Toggle1:SetValue(false)

    local Toggle2 = Tabs.RTX:AddToggle("Toggle2", {Title = "Water Realistic", Default = false })
    Toggle2:OnChanged(function()
        if Options.Toggle2.Value then
            activateSecondToggle()
        else
            revertWaterSettings()
        end
    end)
    Options.Toggle2:SetValue(false)
end

SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
Window:SelectTab(1)
SaveManager:LoadAutoloadConfig()
